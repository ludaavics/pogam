app: pogam

service: pogam-shared-resources

custom: ${file(../serverless.common.yml):custom}

package: ${file(../serverless.common.yml):package}

provider:
  name: aws
  stage: "${self:custom.stage}"
  memorySize: 128

resources:
  Description: "CloudFormation template for Pogam's shared resources."

  Parameters:
    AuroraClusterName:
      Description: "Aurora RDS cluster name"
      Type: String
      Default: "pogam-db-${self:custom.stage}"

    AuroraDatabaseName:
      Description: "Aurora RDS database name"
      Type: String
      Default: pogam

    AuroraUserName:
      AllowedPattern: "[a-zA-Z0-9_]+"
      ConstraintDescription: must be between 1 to 32 alphanumeric characters.
      Description:
        The database admin account user name, between 1 to 32 alphanumeric characters.
      MaxLength: '32'
      MinLength: '1'
      Type: String
      Default: pogam_db_admin_user

  Resources:
    AuroraCredentials:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: "AuroraCredentialsSecret-${self:custom.stage}"
        Description: RDS database auto-generated credentials
        GenerateSecretString:
          SecretStringTemplate: '{"username": "#{AuroraUserName}"}'
          GenerateStringKey: "password"
          PasswordLength: 30
          ExcludeCharacters: '"@/\'

    AuroraCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        DBClusterIdentifier: !Ref AuroraClusterName
        MasterUsername:
          Fn::Join:
            - ""
            - - "{{resolve:secretsmanager:"
              - !Ref AuroraCredentials
              - ":SecretString:username}}"
        MasterUserPassword:
          Fn::Join:
            - ""
            - - "{{resolve:secretsmanager:"
              - !Ref AuroraCredentials
              - ":SecretString:password}}"
        DatabaseName: !Ref AuroraDatabaseName
        Engine: aurora-postgresql
        EngineMode: serverless
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 2
          MinCapacity: 2
          SecondsUntilAutoPause: 300
        EnableHttpEndpoint: true
        StorageEncrypted: true
        BackupRetentionPeriod: 7

    PhotosBucket:
      Type: AWS::S3::Bucket

    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: pogam-api
        Description: Pogam's API Gateway

    RestApiVersion1Resource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId: { Ref: "ApiGatewayRestApi" }
        ParentId: { Fn::GetAtt: "ApiGatewayRestApi.RootResourceId" }
        PathPart: v1

  Outputs:
    AuroraClusterArn:
      Description: "ARN of the Aurora database cluster."
      Value:
        Fn::Join:
          - ""
          - - "arn:aws:rds:#{AWS::Region}:#{AWS::AccountId}:cluster:"
            - !Ref AuroraClusterName
      Export:
        Name: "AuroraClusterArn-${self:custom.stage}"

    AuroraSecretArn:
      Description: "ARN of the secret containing the Aurora database's credentials."
      Value: !Ref AuroraCredentials
      Export:
        Name: "AuroraSecretArn-${self:custom.stage}"

    AuroraDatabaseName:
      Description: Pogam's database name within the Aurora database cluster.
      Value: !Ref AuroraDatabaseName
      Export:
        Name: "AuroraDatabaseName-${self:custom.stage}"

    PhotosBucketName:
      Description: "Name of the S3 bucket used to store listings' photos."
      Value:
        Ref: PhotosBucket
      Export:
        Name: "PhotosBucketName-${self:custom.stage}"

    PhotosBucketArn:
      Description: "ARN of the S3 bucket used to store listings' photos."
      Value:
        Fn::GetAtt:
          - PhotosBucket
          - Arn
      Export:
        Name: "PhotosBucketArn-${self:custom.stage}"

    ApiGatewayRestApiId:
      Description: "The resource ID of the API Gateway."
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: "ApiGatewayRestApiId-${self:custom.stage}"

    RestApiRootResource:
      Description: "The root resource of the API Gateway."
      Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
      Export:
        Name: "RestApiRootResource-${self:custom.stage}"

    RestApiVersion1Resource:
      Description: "The /v1 resource of the API Gateway."
      Value:
        Ref: RestApiVersion1Resource
      Export:
        Name: "RestApiVersion1Resource-${self:custom.stage}"

plugins:
  - serverless-pseudo-parameters
