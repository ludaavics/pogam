app: pogam

service: pogam-scrape-schedules-api

custom: ${file(../serverless.common.yml):custom}

package: ${file(../serverless.common.yml):package}

provider:
  name: aws
  runtime: python3.8
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action: "events:*"
      Resource: "*"

functions:

  create:
    handler: handlers.create
    events:
      - http:
          path: scrape-schedules
          method: post
    environment:
      STAGE: "${self:custom.stage}"
      SCRAPE_FUNCTION_ARN:
        Fn::ImportValue: "ScrapeFunctionArn-${self:custom.stage}"

  list:
    handler: handlers.list_
    events:
      - http:
          path: scrape-schedules
          method: get
    environment:
      STAGE: "${self:custom.stage}"

  delete:
    handler: handlers.delete
    events:
      - http:
          path: scrape-schedules/{rule_name}
          method: delete
    environment:
      STAGE: "${self:custom.stage}"

resources:
  Description: "CloudFormation template for Pogam's scrape scheduling service."

  Resources:
    ScrapeFunctionResourcePolicy:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName:
          Fn::ImportValue: "ScrapeFunctionArn-${self:custom.stage}"
        Principal: events.amazonaws.com
        SourceArn:
          Fn::Sub: 'arn:aws:events:#{AWS::Region}:#{AWS::AccountId}:rule/*'


plugins:
  - serverless-pseudo-parameters
